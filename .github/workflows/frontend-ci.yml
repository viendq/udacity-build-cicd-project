# Workflow name
name: Frontend Continuous Integration

# Triggers for the workflow
on:
  # Manual trigger using the workflow_dispatch event
  workflow_dispatch:

  # Automatic trigger on pull request events targeting the main branch
  pull_request:
    branches:
      - main
    paths: starter/frontend

defaults:
  run:
    working-directory: starter/frontend
# Jobs defined in the workflow
jobs:
  running-test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Node.js 
        uses: actions/setup-node@v3
        with:
          node-version: latest
          node-version-file: starter/frontend/.nvmrc
          
      - name: Restore cache
        uses: actions/cache@v2
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}

      - name: install dependancy
        run: npm ci

      - name: Run tests
        run: npm test
        

  running-linter:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Node.js 
        uses: actions/setup-node@v3
        with:
          node-version: latest
          node-version-file: starter/frontend/.nvmrc

      - name: Restore cache
        uses: actions/cache@v2
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}

      - name: install dependancy
        run: npm ci

      - name: run linter
        run: npm run lint

  post-build-actions:
    needs: [running-test, running-linter]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Node.js 
        uses: actions/setup-node@v3
        with:
          node-version: latest
          node-version-file: starter/frontend/.nvmrc

      - name: Restore cache
        uses: actions/cache@v2
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}

      - name: install dependancy
        run: npm ci
        
      - name: Build Docker image
        run: docker build --build-arg=REACT_APP_MOVIE_API_URL=$REACT_APP_MOVIE_API_URL --tag=mp-frontend:latest .

      - name: Run Docker container
        run: docker run --name mp-frontend -p 3000:3000 -d mp-frontend
